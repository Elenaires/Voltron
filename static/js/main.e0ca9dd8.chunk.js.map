{"version":3,"sources":["components/LoadingComponent.js","shared/baseUrl.js","components/HomeComponent.js","components/MenuComponent.js","components/AboutComponent.js","components/ContactComponent.js","components/CommentFormComponent.js","components/DishDetailComponent.js","components/HeaderComponent.js","components/FooterComponent.js","redux/ActionCreators.js","redux/ActionTypes.js","components/MainComponent.js","redux/dishes.js","redux/comments.js","redux/promotions.js","redux/leaders.js","redux/feedbacks.js","redux/forms.js","App.js","redux/configureStore.js","serviceWorker.js","index.js"],"names":["Loading","react_default","a","createElement","className","baseUrl","RenderCard","_ref","item","isLoading","errMess","LoadingComponent_Loading","react_animation_components","in","transformProps","exitTransform","reactstrap_es","src","image","alt","name","designation","description","Home","props","dish","dishesLoading","dishesErrMess","promotion","promosLoading","promosErrMess","leader","leadersLoading","leadersErrMess","RenderMenuItem","es","to","concat","id","width","Menu","menu","dishes","map","key","active","RenderLeader","tag","object","body","heading","About","leaders","AboutComponent_RenderLeader","title","list","required","val","length","maxLength","len","minLength","isNumber","isNaN","Number","validEmail","test","Contact","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleSubmit","bind","assertThisInitialized","values","postFeedback","resetFeedbackForm","_this2","href","role","lib","model","onSubmit","htmlFor","md","text","placeholder","validators","show","messages","size","offset","check","checkbox","select","textarea","rows","type","color","Component","CommentForm","state","isModalOpen","toggleModal","handleComment","setState","postComment","dishId","rating","author","comment","Fragment","outline","onClick","isOpen","toggle","xs","RenderComment","comments","feedback","commentBlock","Intl","DateTimeFormat","year","month","day","format","Date","parse","date","CommentFormComponent","RenderDish","_ref2","DishDetail","class","Header","isNavOpen","toggleNav","handleLogin","event","alert","username","value","password","remember","checked","preventDefault","dark","expand","height","navbar","innerRef","input","Footer","dishesFailed","errmess","payload","addDishes","commentsFailed","addComments","promosFailed","addPromos","promos","leadersFailed","addLeaders","Main","fetchDishes","fetchComments","fetchPromos","fetchLeaders","HeaderComponent","react_transition_group","location","classNames","timeout","path","component","HomeComponent","filter","featured","promotions","promo","exact","MenuComponent","match","DishDetailComponent","parseInt","params","commentsErrMess","AboutComponent","ContactComponent","FooterComponent","withRouter","connect","dispatch","newComment","toISOString","fetch","method","JSON","stringify","headers","Content-Type","credentials","then","response","ok","error","Error","status","statusText","message","json","catch","console","log","firstName","lastName","telNum","email","agree","contactType","actions","reset","Dishes","arguments","undefined","action","objectSpread","Comments","Promotions","Leaders","Feedbacks","feedbacks","InitialFeedback","firstname","lastname","telnum","store","createStore","combineReducers","createForms","applyMiddleware","thunk","logger","App","react_redux_es","MainComponent","Boolean","window","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e0ca9dd8.chunk.js","sourcesContent":["import React from 'react';\n\nexport const Loading = () => {\n    return(\n        <div className=\"col-12\">\n            <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\n            <p>Loading . . .</p>\n        </div>\n    );\n};","export const baseUrl = 'https://elenaires.github.io/Voltron/';","import React from 'react';\nimport { Card, CardImg, CardText, CardBody, CardTitle, CardSubtitle } from 'reactstrap';\nimport { Loading } from './LoadingComponent';\nimport { baseUrl } from '../shared/baseUrl';\nimport { FadeTransform } from 'react-animation-components';\n\nfunction RenderCard({item, isLoading, errMess}) {\n    if(isLoading) {\n        return(\n            <Loading />\n        );\n    }\n    else if(errMess) {\n        return(\n            <h4>{errMess}</h4>\n        );\n    }\n    else {\n        return (\n            <FadeTransform in\n                transformProps={{\n                    exitTransform: 'scale(0.5) translateY(-50%)'\n                }}>\n                <Card>\n                    <CardImg src={baseUrl + item.image} alt={item.name} />\n                    <CardBody>\n                        <CardTitle>{item.name}</CardTitle>\n                        {item.designation ? <CardSubtitle>{item.designation}</CardSubtitle> : null}\n                        <CardText>{item.description}</CardText>\n                    </CardBody>\n                </Card>\n            </FadeTransform>   \n        );\n    }\n}\n\nfunction Home (props) {\n    return (\n        <div className=\"container\">\n            <div className=\"row aligh-items-start\">\n                <div className=\"col-12 col-md m-1\">\n                    <RenderCard item={props.dish} \n                        isLoading={props.dishesLoading}\n                        errMess={props.dishesErrMess} />\n                </div>\n                <div className=\"col-12 col-md m-1\">\n                    <RenderCard item={props.promotion}\n                    isLoading={props.promosLoading}\n                    errMess={props.promosErrMess} />\n                </div>\n                <div className=\"col-12 col-md m-1\">\n                    <RenderCard item={props.leader}\n                    isLoading={props.leadersLoading}\n                    errMess={props.leadersErrMess} />\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Home;","import React from 'react';\nimport { Card, CardImg, CardImgOverlay, CardTitle, Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { Loading } from './LoadingComponent'\nimport { baseUrl } from '../shared/baseUrl';\n\n    function RenderMenuItem({dish}) {\n        return(\n            <Card>\n                <Link to={`/menu/${dish.id}`} >\n                <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name}/>\n                <CardImgOverlay>\n                    <CardTitle>{dish.name}</CardTitle>\n                </CardImgOverlay>\n                </Link>\n            </Card>\n        );\n    }\n\n    // another way of defining functional component\n    const Menu = (props) => {\n        const menu = props.dishes.dishes.map((dish) => {\n            return (\n                <div key={dish.id} className=\"col-12 col-md-5 m-1\">\n                    <RenderMenuItem dish={dish}/> \n                </div>\n            );\n        });\n\n        if(props.dishes.isLoading) {\n            return(\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <Loading />\n                    </div>\n                </div>\n            );\n        }\n        else if (props.dishes.errMess) {\n            return(\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <h4>{props.dishes.errMess}</h4>\n                    </div>\n                </div>\n            ); \n        }\n        else {\n            return ( \n                <div className=\"container\"> \n                    <div className=\"row\">\n                        <Breadcrumb>\n                            <BreadcrumbItem>\n                                <Link to='/home'>home</Link>\n                            </BreadcrumbItem>\n                            <BreadcrumbItem active>\n                                Menu\n                            </BreadcrumbItem>\n                        </Breadcrumb>\n                        <div className=\"col-12\">\n                            <h3>Menu</h3>\n                            <hr />\n                         </div>\n                    </div>\n                    <div className=\"row\">\n                        {menu}\n                    </div> \n                </div>\n            );\n        }\n    }\n        \nexport default Menu;","import React from 'react';\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { Loading } from './LoadingComponent';\nimport { baseUrl } from '../shared/baseUrl';\n\nconst RenderLeader = ({leader}) => {\n    return (\n        <Media tag=\"li\">\n            <Media className=\"align-self-center\">\n                <Media object src={baseUrl + leader.image} alt={leader.name} />\n            </Media>    \n            <Media body className=\"ml-5\">\n                <Media heading>{leader.name}</Media>\n                <p>{leader.designation}</p>\n                <p>{leader.description}</p>\n            </Media>\n        </Media>\n    );\n}\n\nfunction About(props) {\n\n    const leaders = props.leaders.leaders.map((leader) => {\n        return (\n            <div key={leader.id} className=\"col-12 mt-5\">\n                <RenderLeader leader={leader}/>\n            </div>\n        );\n    });\n\n    if(props.leaders.isLoading) {\n        return(\n            <Loading />\n        );\n    }\n    else if (props.leaders.errMess) {\n        return(\n            // *** this.props to props\n            <h4>{props.leaders.errMess}</h4>\n        ); \n    }\n    else {\n        return(\n            <div className=\"container\">\n                <div className=\"row\">\n                    <Breadcrumb>\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\n                        <BreadcrumbItem active>About Us</BreadcrumbItem>\n                    </Breadcrumb>\n                    <div className=\"col-12\">\n                        <h3>About Us</h3>\n                        <hr />\n                    </div>                \n                </div>\n                <div className=\"row row-content\">\n                    <div className=\"col-12 col-md-6\">\n                        <h2>Our History</h2>\n                        <p>Started in 2010, Volton's Kitchen quickly established itself as a culinary icon par excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Hong Kong.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\n                        <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Shirogana, that featured for the first time the world's best cuisines in a pan.</p>\n                    </div>\n                    <div className=\"col-12 col-md-5\">\n                        <Card>\n                            <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\n                            <CardBody>\n                                <dl className=\"row p-1\">\n                                    <dt className=\"col-6\">Started</dt>\n                                    <dd className=\"col-6\">3 Feb. 2013</dd>\n                                    <dt className=\"col-6\">Major Stake Holder</dt>\n                                    <dd className=\"col-6\">HK Fine Foods Inc.</dd>\n                                    <dt className=\"col-6\">Last Year's Turnover</dt>\n                                    <dd className=\"col-6\">$1,250,375</dd>\n                                    <dt className=\"col-6\">Employees</dt>\n                                    <dd className=\"col-6\">40</dd>\n                                </dl>\n                            </CardBody>\n                        </Card>\n                    </div>\n                    <div className=\"col-12\">\n                        <Card>\n                            <CardBody className=\"bg-faded\">\n                                <blockquote className=\"blockquote\">\n                                    <p className=\"mb-0\">You better cut the pizza in four pieces because\n                                        I'm not hungry enough to eat six.</p>\n                                    <footer className=\"blockquote-footer\">Yogi Berra,\n                                    <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\n                                        P. Pepe, Diversion Books, 2014</cite>\n                                    </footer>\n                                </blockquote>\n                            </CardBody>\n                        </Card>\n                    </div>\n                </div>\n                <div className=\"row row-content\">\n                    <div className=\"col-12\">\n                        <h2>Corporate Leadership</h2>\n                    </div>\n                    <div className=\"col-12\">\n                        <Media list>\n                            {leaders}\n                        </Media>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n    \n}\n\nexport default About;    ","import React, { Component } from 'react';\nimport { Breadcrumb, BreadcrumbItem, Button, Label, Col, Row} from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { Control, Form, Errors } from 'react-redux-form';\n\n// checks that value is greater than 0\nconst required = (val) => val && val.length;\n\n// function of function\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\n\nconst minLength = (len) => (val) => (val) && (val.length >= len);\n\nconst isNumber = (val) => !isNaN(Number(val));\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\n\n\nclass Contact extends Component {\n\n    constructor(props) {\n        super(props);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleSubmit(values) {\n        //console.log(\"Current State is: \" + JSON.stringify(values));\n        //alert(\"Current State is: \" + JSON.stringify(values));\n        this.props.postFeedback(values);\n        this.props.resetFeedbackForm();\n    }\n\n    render() {\n        return(\n            <div className=\"container\">\n                <div className=\"row\">\n                    <Breadcrumb>\n                        <BreadcrumbItem>\n                            <Link to='/home'>home</Link>\n                        </BreadcrumbItem>\n                        <BreadcrumbItem active>\n                            Contact Us\n                        </BreadcrumbItem>\n                    </Breadcrumb>\n                    <div className=\"col-12\">\n                        <h3>Contact Us</h3>\n                        <hr />\n                        </div>\n                </div> \n                <div className=\"row row-content\">\n                    <div className=\"col-12\">\n                    <h3>Location Information</h3>\n                    </div>\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\n                            <h5>Our Address</h5>\n                            <address>\n                            121, Clear Water Bay Road<br />\n                            Clear Water Bay, Kowloon<br />\n                            HONG KONG<br />\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\n                            </address>\n                    </div>\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\n                        <h5>Map of our Location</h5>\n                    </div>\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\n                        <div className=\"btn-group\" role=\"group\">\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\n                            <a role=\"button\" className=\"btn btn-info\"><i className=\"fa fa-skype\"></i> Skype</a>\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"row row-content\">\n                    <div className=\"col-12\">\n                        <h3>Send us Your Feedback</h3>\n                    </div>\n                    <div className=\"col-12 col-md-9\">\n                        {/* LocalForm - supported by react-redux-form where data is not persist across component \n                        as in data is d in the local state of the component (not in redux store) */}\n                        <Form model=\"feedback\" onSubmit={(values) => this.handleSubmit(values)}>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\n                                        placeholder=\"First Name\" \n                                        className=\"form-control\"\n                                        validators={{\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\n                                        }}\n                                        />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".firstname\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be greater than 2 characters',\n                                            maxLength: 'Must be 15 characters of less'\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\n                                        placeholder=\"Last Name\" \n                                        className=\"form-control\"\n                                        validators={{\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\n                                        }}\n                                        />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".lastname\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be greater than 2 characters',\n                                            maxLength: 'Must be 15 characters of less'\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\n                                        placeholder=\"Tel. Number\" \n                                        className=\"form-control\"\n                                        validators={{\n                                            required, minLength: minLength(3), maxLength: maxLength(15), isNumber\n                                        }}\n                                        />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".telnum\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be greater than 2 numbers',\n                                            maxLength: 'Must be 15 numbers of less',\n                                            isNumber: 'Must be a number'\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\n                                        placeholder=\"Email\" \n                                        className=\"form-control\"\n                                        validators={{\n                                            required, validEmail\n                                        }}\n                                        />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".email\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required',\n                                            validEmail: 'Invalid email address'\n                                        }}\n                                    />\n\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Col md={{size: 6, offset: 2}}>\n                                    <div className=\"form-check\">\n                                        <Label check>\n                                            <Control.checkbox model=\".agree\" name=\"agree\" \n                                                className='form-check-input'\n                                                 /> {' '}\n                                                <strong>May we contact you?</strong>\n                                        </Label>\n                                    </div>\n                                </Col>\n                                <Col md={{size: 3, offset: 1}}>\n                                    <Control.select model=\".contactType\" name=\"contactType\"\n                                        className=\"form-control\">\n                                        <option>Tel.</option>\n                                        <option>Email</option>\n                                    </Control.select>\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\n                                <Col md={10}>\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\"\n                                        rows=\"12\" \n                                        className=\"form-control\"/>\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Col md={{size: 10, offset: 2}}>\n                                    <Button type=\"submit\" color=\"primary\">\n                                        Send Feedback\n                                    </Button>\n                                </Col>\n                            </Row>\n                        </Form>\n                        \n                    </div>\n                </div>\n                \n            </div>\n        );\n    }\n    \n}\n\nexport default Contact;","import React, { Component } from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, Label, Row, Col  } from 'reactstrap';\nimport { Control, LocalForm, Errors } from 'react-redux-form';\n\n// checks that value is greater than 0\nconst required = (val) => val && val.length;\n\n// function of function\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\n\nconst minLength = (len) => (val) => (val) && (val.length >= len);\n\nclass CommentForm extends Component {\n\n    constructor(props){\n        super(props);\n\n        this.state = {\n            isModalOpen: false\n        }\n\n        this.toggleModal = this.toggleModal.bind(this);\n        this.handleComment = this.handleComment.bind(this);\n    }\n\n    toggleModal() {\n        this.setState({\n            isModalOpen: !this.state.isModalOpen\n        });\n    }\n\n    // submission of a comment will trigger an action to be sent to the redux store\n    // and the action will result in the comment being addded to the comment state of the redux store\n    // which will result in the store admitting a change, and main component getting updated state from the redux store\n    // then main component passes new state to all the child components\n    // renderComment realises comments have changed\n    // react takes care of rendering comment with new comment addded\n    handleComment(values){\n        this.toggleModal();\n        //console.log(\"Current State is: \" + JSON.stringify(values));\n        //alert(\"Current State is: \" + JSON.stringify(values));\n        this.props.postComment(this.props.dishId, values.rating, values.author, values.comment);\n    }\n\n\n    render() {\n        return (\n            <React.Fragment>\n                <Button outline color=\"secondary\" onClick={this.toggleModal}>\n                    <i className=\"fa fa-pencil\"></i> Submit Comment\n                </Button> \n\n                {/* toggle - so that when we click outside of the modal the form disappear */}\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n                    {/* toggle - so that an 'x' appears in the header and we can dismiss the form */}\n                    <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\n                    <ModalBody>\n                        <LocalForm onSubmit={(values) => this.handleComment(values)}>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"rating\" xs={12}>Rating</Label>\n                                <Col>\n                                    <Control.select model=\".rating\" id=\"rating\" name=\"rating\"\n                                        className=\"form-control\">\n                                        <option>1</option>\n                                        <option>2</option>\n                                        <option>3</option>\n                                        <option>4</option>\n                                        <option>5</option>\n                                    </Control.select>\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"author\" xs={12}>Your Name</Label>\n                                <Col>\n                                    <Control.text model=\".author\" id=\"author\" name=\"author\"\n                                        placeholder=\"Your Name\" \n                                        className=\"form-control\"\n                                        validators={{\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\n                                        }}\n                                        />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".name\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be greater than 2 characters',\n                                            maxLength: 'Must be 15 characters of less'\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"comment\" xs={12}>Comment</Label>\n                                <Col>\n                                    <Control.textarea model=\".comment\" id=\"comment\" name=\"comment\"\n                                        rows=\"6\" \n                                        className=\"form-control\"/>\n                                </Col>\n                            </Row>\n                            {/* as long as button appears within LocalForm, it will syn with onSubmit */}\n                            <Row className=\"form-group\">\n                                <Col xs={{size: 12}}>\n                                    <Button type=\"submit\" color=\"primary\">\n                                        Submit\n                                    </Button>\n                                </Col>\n                            </Row>\n                        </LocalForm>\n                    </ModalBody>\n                </Modal>  \n            </React.Fragment>        \n        );\n    }   \n}\n\nexport default CommentForm;\n","import React from 'react';\nimport CommentForm from './CommentFormComponent';\nimport { Card, CardImg, CardText, CardBody, CardTitle, Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { Loading } from './LoadingComponent';\nimport { baseUrl } from '../shared/baseUrl';\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\n\n    function RenderComment({comments, postComment, dishId}){\n            const feedback = comments.map((commentBlock) => {\n                return (\n                    <ul className=\"list-unstyled\">\n                        <Stagger in>\n                            <Fade in>\n                                <li key={commentBlock.id}>\n                                    <p>{commentBlock.comment}</p>\n                                    <p>-- {commentBlock.author}, {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit'}).format(new Date(Date.parse(commentBlock.date)))}</p>\n                                </li>\n                            </Fade>\n                        </Stagger>   \n                    </ul>\n                );\n            });\n\n            return (\n                <div className=\"col-12 col-md-5 m-1\">\n                    <h4>Comments</h4>\n                    {feedback}\n                    < CommentForm dishId={dishId} postComment={postComment} />\n                </div>\n            );\n    }\n\n    function RenderDish({dish}) {\n            return (\n                <div key={dish.id} className=\"col-12 col-md-5 m-1\">\n                    <FadeTransform in \n                        transformProps={{\n                            exitTransform: 'scale(0.5) translateY(-50%)'\n                        }}>\n                        <Card>\n                            <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name}/>\n                            <CardBody>\n                                <CardTitle>{dish.name}</CardTitle>\n                                <CardText>{dish.description}</CardText>\n                            </CardBody>       \n                        </Card>\n                    </FadeTransform>\n                </div>  \n            );       \n    }\n\n    const DishDetail = (props) => {\n        if(props.isLoading) {\n            return(\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <Loading />\n                    </div>\n                </div>\n            );\n        }\n        else if (props.errMess) {\n            return(\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <h4>{props.errMess}</h4>\n                    </div>\n                </div>\n            ); \n        }\n        else if(props.dish != null) {\n            return (\n                <div class=\"container\">\n                    <div className=\"row\">\n                        <Breadcrumb>\n                            <BreadcrumbItem>\n                                <Link to='/menu'>menu</Link>\n                            </BreadcrumbItem>\n                            <BreadcrumbItem active>\n                                {props.dish.name}\n                            </BreadcrumbItem>\n                        </Breadcrumb>\n                        <div className=\"col-12\">\n                            <h3>{props.dish.name}</h3>\n                            <hr />\n                        </div>\n                    </div>\n                    <div className=\"row\">  \n                        <RenderDish dish={props.dish} />\n                        <RenderComment comments={props.comments}\n                            postComment={props.postComment}\n                            dishId={props.dish.id} />\n                        {/*dish == null ? (this.renderComment(null)) : (this.renderComment(dish.comments))*/}\n                    </div>\n                </div>\n            );\n        }\n        else {\n            return (\n                <div></div>\n            );\n        }   \n    }\n\n\nexport default DishDetail;","import React, { Component } from 'react';\nimport { Navbar, NavbarBrand, Nav, NavbarToggler, Collapse, NavItem, Jumbotron, Button, Modal, ModalHeader, ModalBody, Form, FormGroup, Input, Label } from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\n\nclass Header extends Component {\n\n    constructor(props){\n        super(props);\n\n        this.state = {\n            isNavOpen: false,\n            isModalOpen: false\n        }\n        this.toggleNav = this.toggleNav.bind(this);\n        this.toggleModal = this.toggleModal.bind(this);\n        this.handleLogin = this.handleLogin.bind(this);\n    }\n\n    toggleNav() {\n        this.setState({\n            isNavOpen: !this.state.isNavOpen\n        });\n    }\n\n    toggleModal() {\n        this.setState({\n            isModalOpen: !this.state.isModalOpen\n        })\n    }\n\n    handleLogin(event){\n        this.toggleModal();\n        alert(\"Username: \" + this.username.value + \" Password: \" + this.password.value \n        + \" Remember: \" + this.remember.checked);\n\n        event.preventDefault();\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n            <Navbar dark expand=\"md\">\n                <div className=\"container\">\n                    <NavbarToggler onClick={this.toggleNav} />\n                    <NavbarBrand className=\"mr-auto\" href=\"/\">\n                        <img src=\"assets/images/logo.png\" height=\"30\" width=\"41\" alt=\"Ristorante Con Fusion\" />\n                    </NavbarBrand>\n                    <Collapse isOpen={this.state.isNavOpen} navbar>   \n                        <Nav navbar>\n                            <NavItem>\n                                <NavLink className=\"nav-link\" to=\"/home\">\n                                    <span className=\"fa fa-home fa-lg\"></span> Home\n                                </NavLink>\n                            </NavItem>\n                            <NavItem>\n                                <NavLink className=\"nav-link\" to=\"/aboutus\">\n                                    <span className=\"fa fa-infofa-lg\"></span> About Us\n                                </NavLink>\n                            </NavItem>\n                            <NavItem>\n                                <NavLink className=\"nav-link\" to=\"/menu\"> \n                                    <span className=\"fa fa-list fa-lg\"></span> Menu\n                                </NavLink>\n                            </NavItem>\n                            <NavItem>\n                                <NavLink className=\"nav-link\" to=\"/contactus\"> \n                                    <span className=\"fa fa-address-card fa-lg\"></span> Contact Us\n                                </NavLink>\n                            </NavItem>\n                        </Nav>\n                        <Nav className=\"ml-auto\" navbar>\n                            <NavItem>\n                                <Button outline onClick={this.toggleModal}>\n                                    <span className=\"fa fa-sign-in fa-lg\"></span> Login\n                                </Button>\n                            </NavItem>\n                        </Nav>\n                    </Collapse> \n                </div>\n                </Navbar>\n                <Jumbotron>\n                    <div className=\"container\">\n                        <div className=\"row row-header\">\n                            <div className=\"col-12 col-sm-6\">\n                                <h1>Voltron's Kitchen</h1>\n                                <p>We take inspiration from the World's best cuisines, and create a unique fusion experience. Out lipsmacking creations will tickle your culinary senses!</p>\n                            </div>\n                        </div>\n                    </div>\n                </Jumbotron>\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n                    <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\n                    <ModalBody>\n                        {/*uncontrolled form - state of the form is not reflected as state of the component \n                        (state of the form is retained in the dom itself) */}\n                        <Form onSubmit={this.handleLogin}>\n                            <FormGroup>\n                                <Label htmlFor=\"username\">Username</Label>\n                                <Input type=\"text\" id=\"username\" name=\"username\"\n                                    innerRef={(input) => this.username = input} />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label htmlFor=\"password\">Password</Label>\n                                <Input type=\"password\" id=\"password\" name=\"password\"\n                                    innerRef={(input) => this.password = input} />\n                            </FormGroup>\n                            <FormGroup check>\n                                <Label check>\n                                    <Input type=\"checkbox\" name=\"remember\"\n                                        innerRef={(input) => this.remember = input} />\n                                    Remember me\n                                </Label>\n                            </FormGroup>\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\n                        </Form>\n                    </ModalBody>\n                </Modal>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default Header;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction Footer(props) {\n    return(\n    <div className=\"footer\">\n        <div className=\"container\">\n            <div className=\"row justify-content-center\">             \n                <div className=\"col-4 offset-1 col-sm-2\">\n                    <h5>Links</h5>\n                    <ul className=\"list-unstyled\">\n                        <li><Link to=\"/home\">Home</Link></li>\n                        <li><Link to=\"/aboutus\">About Us</Link></li>\n                        <li><Link to=\"/menu\">Menu</Link></li>\n                        <li><Link to=\"/contactus\">Contact Us</Link></li>\n                    </ul>\n                </div>\n                <div className=\"col-7 col-sm-5\">\n                    <h5>Our Address</h5>\n                    <address>\n\t\t              121, Clear Water Bay Road<br />\n\t\t              Clear Water Bay, Kowloon<br />\n\t\t              HONG KONG<br />\n\t\t              <i className=\"fa fa-phone fa-lg\"></i>: +852 1234 5678<br />\n\t\t              <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321<br />\n\t\t              <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:confusion@food.net\">\n                         confusion@food.net</a>\n                    </address>\n                </div>\n                <div className=\"col-12 col-sm-4 align-self-center\">\n                    <div className=\"text-center\">\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\n                        <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\n                        <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\n                        <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\n                        <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\n                    </div>\n                </div>\n            </div>\n            <div className=\"row justify-content-center\">             \n                <div className=\"col-auto\">\n                    <p>© Copyright 2019 Voltron's Kitchen</p>\n                </div>\n            </div>\n        </div>\n    </div>\n    )\n}\n\nexport default Footer;","import * as ActionTypes from './ActionTypes';\nimport { baseUrl } from '../shared/baseUrl';\n\n// a function that creates and return an action object\nexport const addFeedback = (feedback) => ({\n    type: ActionTypes.ADD_FEEDBACK,\n    payload: feedback\n});\n\nexport const postFeedback = (feedback) => (dispatch) => {\n     \n    return fetch(baseUrl + 'feedback.json', {\n        method: 'POST',\n        body: JSON.stringify(feedback),\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        credentials: 'same-origin'\n    })\n    .then(\n        response => {\n            if(response.ok) {\n                return response;\n            }\n            else {\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\n                error.response = response;\n                throw error;\n            }\n        },\n        error => {\n            var errMess = new Error(error.message);\n            throw errMess;\n        })\n    .then(response => response.json())\n    .then(response => \n        alert('Thank you for your feedback! '+ JSON.stringify(response)))\n    .then(response => dispatch(addFeedback(response)))\n    .catch(error => { \n        console.log('Post Feedback', error.message);\n        alert('Your Feedback could not be submitted\\nError: ' + error.message);\n    })\n}\n\n\nexport const addComment =  (comment) => ({\n    type: ActionTypes.ADD_COMMENT, \n    payload: comment\n});\n\nexport const postComment = (dishId, rating, author, comment) => (dispatch) => {\n\n    const newComment = {\n        dishId: dishId,\n        rating: rating,\n        author: author,\n        comment: comment\n    }\n\n    newComment.date = new Date().toISOString();\n\n    return fetch(baseUrl + 'comments.json', {\n        method: 'POST',\n        body: JSON.stringify(newComment),\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        credentials: 'same-origin'\n        })\n        .then(response => {\n            if(response.ok) {\n                return response;\n            }\n            else {\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\n                error.response = response;\n                throw error;\n            }\n        },\n\n        // dont hear back from server at all\n        error => {\n            var errmess = new Error(error.message);\n            throw errmess;\n        })\n        .then(response => response.json())\n        .then(response => dispatch(addComment(response)))\n        .catch(error => { \n            console.log('Post comments', error.message);\n            alert('Your comment could not be posted\\nError: ' + error.message);\n        })\n}\n\nexport const fetchFeedbacks = () => (dispatch) => {\n    return fetch(baseUrl + 'feedback.json')\n        .then(response => {\n            if(response.ok) {\n                return response;\n            }\n            else {\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\n                error.response = response;\n                throw error;\n            }\n        },\n\n        // dont hear back from server at all\n        error => {\n            var errmess = new Error(error.message);\n            throw errmess;\n        })\n        .then(response => response.json())\n        .then(feedbacks => dispatch(addFeedbacks(feedbacks)))\n        .catch(error => dispatch(feedbacksFailed(error.message)));\n    }\n\nexport const feedbacksFailed = (errmess) => ({\n    type: ActionTypes.FEEDBACKS_FAILED,\n    payload: errmess\n});\n\nexport const addFeedbacks = (feedbacks) => ({\n    type: ActionTypes.ADD_FEEDBACKS,\n    payload: feedbacks\n});\n\n// a thunk (function that returns a function)\nexport const fetchDishes = () => (dispatch) => {\n    dispatch(dishesLoading(true));\n\n    // fetch dishes from server then push to redux store\n    return fetch(baseUrl + 'dishes.json')\n        // receive response from server but could be an error response\n        .then(response => {\n            if(response.ok) {\n                return response;\n            }\n            else {\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\n                error.response = response;\n                throw error;\n            }\n        },\n\n        // dont hear back from server at all\n        error => {\n            var errmess = new Error(error.message);\n            throw errmess;\n        })\n        .then(response => response.json())\n        .then(dishes => dispatch(addDishes(dishes)))\n        .catch(error => dispatch(dishesFailed(error.message)));\n}\n\n// returning object literals from arrow function in ecma6\nexport const dishesLoading = () => ({\n    type: ActionTypes.DISHES_LOADING\n});\n\nexport const dishesFailed = (errmess) => ({\n    type: ActionTypes.DISHES_FAILED,\n    payload: errmess\n});\n\nexport const addDishes = (dishes) => ({\n    type: ActionTypes.ADD_DISHES,\n    payload: dishes\n});\n\nexport const fetchComments = () => (dispatch) => {\n    return fetch(baseUrl + 'comments.json')\n        .then(response => {\n            if(response.ok) {\n                return response;\n            }\n            else {\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\n                error.response = response;\n                throw error;\n            }\n        },\n\n        // dont hear back from server at all\n        error => {\n            var errmess = new Error(error.message);\n            throw errmess;\n        })\n        .then(response => response.json())\n        .then(comments => dispatch(addComments(comments)))\n        .catch(error => dispatch(commentsFailed(error.message)));\n    }\n\nexport const commentsFailed = (errmess) => ({\n    type: ActionTypes.COMMENTS_FAILED,\n    payload: errmess\n});\n\nexport const addComments = (comments) => ({\n    type: ActionTypes.ADD_COMMENTS,\n    payload: comments\n});\n\nexport const fetchPromos = () => (dispatch) => {\n    dispatch(promosLoading(true));\n\n    return fetch(baseUrl + 'promotions.json')\n        .then(response => {\n            if(response.ok) {\n                return response;\n            }\n            else {\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\n                error.response = response;\n                throw error;\n            }\n        },\n\n        // dont hear back from server at all\n        error => {\n            var errmess = new Error(error.message);\n            throw errmess;\n        })\n        .then(response => response.json())\n        .then(promos => dispatch(addPromos(promos)))\n        .catch(error => dispatch(promosFailed(error.message)));\n}\n\n// returning object literals from arrow function in ecma6\nexport const promosLoading = () => ({\n    type: ActionTypes.PROMOS_LOADING\n});\n\nexport const promosFailed = (errmess) => ({\n    type: ActionTypes.PROMOS_FAILED,\n    payload: errmess\n});\n\nexport const addPromos = (promos) => ({\n    type: ActionTypes.ADD_PROMOS,\n    payload: promos\n});\n\n// leaders\nexport const fetchLeaders = () => (dispatch) => {\n    dispatch(leadersLoading(true));\n\n    return fetch(baseUrl + 'leaders.json')\n        // .then takes in 2 arguments\n        .then(\n            response => {\n                if(response.ok) {\n                    return response;\n                }\n                else {\n                    var error = new Error('Error ' + response.status + ': ' + response.statusText);\n                    error.response = response;\n                    throw error;\n                }\n            },\n\n            error => {\n                var errmess = new Error(error.message);\n                throw errmess;\n            })\n        .then(response => response.json())\n        .then(leaders => dispatch(addLeaders(leaders)))\n        .catch(error => dispatch(leadersFailed(error.message)));\n}\n\nexport const leadersLoading = () => ({\n    type: ActionTypes.LEADERS_LOADING\n});\n\nexport const leadersFailed = (errmess) => ({\n    type: ActionTypes.LEADERS_FAILED,\n    payload: errmess\n});\n\nexport const addLeaders = (leaders) => ({\n    type: ActionTypes.ADD_LEADERS,\n    payload: leaders\n});\n","export const ADD_COMMENT = 'ADD_COMMENT';\n// fetch dishes fro server\nexport const DISHES_LOADING = 'DISHES_LOADING';\n// fail to fetch dishes from server\nexport const DISHES_FAILED = 'DISHES_FAILED';\n// add dishes to store\nexport const ADD_DISHES = 'ADD_DISHES';\nexport const ADD_COMMENTS = 'ADD_COMMENTS';\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED';\nexport const PROMOS_LOADING = 'PROMOS_LOADING';\nexport const ADD_PROMOS = 'ADD_PROMOS';\nexport const PROMOS_FAILED = 'PROMOS_FAILED';\nexport const ADD_LEADERS = 'ADD_LEADERS';\nexport const LEADERS_FAILED = \"LEADERS_FAILED\";\nexport const LEADERS_LOADING = \"LEADERS_LOADING\";\nexport const ADD_FEEDBACK = \"ADD_FEEDBACK\";\nexport const ADD_FEEDBACKS = \"ADD_FEEDBACKS\";\nexport const FEEDBACKS_LOADING = \"FEEDBACKS_LOADING\";\nexport const FEEDBACKS_FAILED = \"FEEDBACKS_FAILED\";\n\n\n\n","import React, { Component } from 'react';\nimport Home from './HomeComponent';\nimport Menu from './MenuComponent';\nimport About from './AboutComponent';\nimport Contact from './ContactComponent';\nimport DishDetail from './DishDetailComponent';\nimport Header from './HeaderComponent';\nimport Footer from './FooterComponent';\n// withRouter is required for react component to connect to redux if we are using react router\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\n// connect react application to redux store\nimport { connect } from 'react-redux';\nimport { postComment, postFeedback, fetchDishes, fetchComments, fetchPromos, fetchLeaders } from '../redux/ActionCreators';\nimport { actions } from 'react-redux-form';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\n\n\n// maps the states from the redux store to main componenat props\nconst mapStateToProps = state => {\n    return {\n        dishes: state.dishes,\n        comments: state.comments,\n        promotions: state.promotions,\n        leaders: state.leaders,\n    }\n}\n\n// addComment is a function - used as attribute for dishdetail component\n// to dispatch action to the redux store\nconst mapDispatchToProps = (dispatch) => ({\n    postComment: (dishId, rating, author, comment) => dispatch(postComment(dishId, rating, author, comment)),\n    postFeedback: (firstName, lastName, telNum, email, agree, contactType, message) => dispatch(postFeedback(firstName, lastName, telNum, email, agree, contactType, message)),\n    fetchDishes: () => {dispatch(fetchDishes())},\n    resetFeedbackForm: () => { dispatch(actions.reset('feedback'))},\n    fetchComments: () => {dispatch(fetchComments())},\n    fetchPromos: () => {dispatch(fetchPromos())},\n    fetchLeaders: () => {dispatch(fetchLeaders())},\n});\n\nclass Main extends Component {\n\n    // lifecycle method - will be called right after main gets mounted into the view\n    // fetchDishes will be called to fetch the dishes and loaded into redux store\n    componentDidMount() {\n        this.props.fetchDishes();\n        this.props.fetchComments();\n        this.props.fetchPromos();\n        this.props.fetchLeaders();\n    }\n\n    render() {\n        const HomePage = () => {\n            return(\n                <Home dish={this.props.dishes.dishes.filter((dish) => dish.featured)[0]}\n                dishesLoading={this.props.dishes.isLoading}\n                dishesErrMess={this.props.dishes.errMess}\n                promotion={this.props.promotions.promotions.filter((promo) => promo.featured)[0]}\n                promosLoading={this.props.promotions.isLoading}\n                promosErrMess={this.props.promotions.errMess}\n                leader={this.props.leaders.leaders.filter((leader) => leader.featured)[0]}\n                leadersLoading={this.props.leaders.isLoading}\n                leadersErrMess={this.props.leaders.errMess}/>\n            );\n        }\n\n        const DishWithId = ({match}) => {\n            return(\n                <DishDetail dish={this.props.dishes.dishes.filter((dish) => dish.id === parseInt(match.params.dishId,10))[0]}\n                    isLoading={this.props.dishes.isLoading}\n                    errMess={this.props.dishes.errMess}\n                    comments={this.props.comments.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId,10))}\n                    commentsErrMess={this.props.comments.errMess}\n                    postComment={this.props.postComment}\n                />\n            );\n        }\n\n        return (\n            <div>\n                <Header />\n                <TransitionGroup>\n                    <CSSTransition key={this.props.location.key} classNames=\"page\" timeout={300}>\n                        <Switch>\n                            <Route path=\"/home\" component={HomePage} />\n                            <Route exact path=\"/menu\" component={() => <Menu dishes={this.props.dishes} />} />\n                            <Route path=\"/menu/:dishId\" component={DishWithId} />\n                            <Route exact path=\"/aboutus\" component={() => <About leaders={this.props.leaders}/>} />\n                            <Route exact path='/contactus' component={() => <Contact \n                                resetFeedbackForm={this.props.resetFeedbackForm} \n                                postFeedback={this.props.postFeedback}\n                                 />} />\n                            <Redirect to=\"/home\" />\n                        </Switch>\n                    </CSSTransition>\n                </TransitionGroup>\n                <Footer />\n            </div>\n        );\n    }\n}\n\n// connects main component to redux store (withRouter is needed because we use react router)\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));\n","import * as ActionTypes from './ActionTypes';\n\n\n// export reducer function\nexport const Dishes = (state = {\n        isLoading: true, // initial true as there is no dishes, need to load data from somewhere, set to false once we obtain dishes information from somewhere\n        errMess: null, // will be set with corresponding error msg when fetching failed\n        dishes: [] // if fetching successful, load dishes in ADD_DISHES\n    }, action) => {\n    switch(action.type) {\n        case ActionTypes.ADD_DISHES:\n            return {...state, isLoading: false, errMess: null, dishes: action.payload};\n\n        /// ...state is a spread operator, take current value of state, create a copy and add modification based on the remaining parameter and return\n        // state is immutable (not modifying original, we return new one)\n        case ActionTypes.DISHES_LOADING:\n            return {...state, isLoading: true, errMess: null, dishes: []};\n\n        // fail to load dishes thus set isLoading to false\n        // dishes array is empty as there is no dishes\n        case ActionTypes.DISHES_FAILED:\n            return {...state, isLoading: false, errMess: action.payload, dishes: []};\n\n\n        default: \n            return state;\n    }\n}","import * as ActionTypes from './ActionTypes';\n\nexport const Comments = (state = {\n        isLoading: true,\n        errMess: null,\n        comments: []\n    }, action) => {\n    switch(action.type) {\n        case ActionTypes.ADD_COMMENTS:\n            return {...state, isLoading: false, errMess: null, comments: action.payload};\n\n        case ActionTypes.COMMENTS_FAILED:\n            return {...state, isLoading: false, errMess: action.payload, comments: []};\n\n        case ActionTypes.ADD_COMMENT:\n            var comment = action.payload;\n            return {...state, comments: state.comments.concat(comment)};\n        \n        default: \n            return state;\n    }\n}","import * as ActionTypes from './ActionTypes';\n\nexport const Promotions = (state = {\n        isLoading: true,\n        errMess: null,\n        promotions: []\n    }, action) => {\n    switch(action.type) {\n        case ActionTypes.ADD_PROMOS:\n            return {...state, isLoading: false, errMess: null, promotions: action.payload};\n\n        case ActionTypes.PROMOS_LOADING:\n            return {...state, isLoading: true, errMess: null, promotions: []};\n\n        case ActionTypes.PROMOS_FAILED:\n            return {...state, isLoading: false, errMess: action.payload, promotions: []};\n\n        default: \n            return state;\n    }\n}","import * as ActionTypes from './ActionTypes';\n\n\nexport const Leaders = (state = {\n        isLoading: true,\n        errMess: null,\n        leaders: []\n    }, action) => {\n    switch(action.type) {\n        case ActionTypes.ADD_LEADERS:\n            return {...state, isLoading: false, errMess: null, leaders: action.payload};\n\n        case ActionTypes.LEADERS_LOADING:\n            return {...state, isLoading: true, errMess: null, leaders: []};\n\n        case ActionTypes.LEADERS_FAILED:\n            return {...state, isLoading: false, errMess: action.payload, leaders: []};\n        default: \n            return state;\n    }\n}","import * as ActionTypes from './ActionTypes';\n\nexport const Feedbacks = (state = {\n        isLoading: true,\n        errMess: null,\n        feedbacks: []\n    }, action) => {\n    switch(action.type) {\n        case ActionTypes.ADD_FEEDBACK:\n            var feedback = action.payload;\n            return {...state, feedbacks: state.feedbacks.concat(feedback)};\n\n        case ActionTypes.FEEDBACKS_FAILED:\n            return {...state, isLoading: false, errMess: action.payload, feedbacks: []};\n\n        case ActionTypes.ADD_FEEDBACKS:\n            return {...state, isLoading: false, errMess: null, feedbacks: action.payload};\n\n        default: \n        return state;\n    }\n}\n","export const InitialFeedback = {\n    firstname: '',\n    lastname: '',\n    telnum: '',\n    email: '',\n    agree: false,\n    contactType: 'Tel.',\n    message: ''\n};","import React, { Component } from 'react';\nimport Main from './components/MainComponent';\nimport './App.css';\nimport { BrowserRouter } from 'react-router-dom';\n// import provider so that every other components have access to redux store\nimport { Provider } from 'react-redux';\nimport { ConfigureStore } from './redux/configureStore';\n\nconst store = ConfigureStore();\n\nclass App extends Component {\n\n  render() {\n    return (\n      <Provider store={store}>\n        <BrowserRouter>\n          <div>\n            <Main />\n          </div>\n        </BrowserRouter>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { createForms } from 'react-redux-form';\nimport { Dishes } from './dishes';\nimport { Comments } from './comments';\nimport { Promotions } from './promotions';\nimport { Leaders } from './leaders';\nimport { Feedbacks } from './feedbacks';\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger';\nimport { InitialFeedback } from './forms';\n\n// combine reduces here\nexport const ConfigureStore = () => {\n    const store = createStore(\n        combineReducers({\n            dishes: Dishes,\n            comments: Comments,\n            promotions: Promotions,\n            leaders: Leaders,\n            feedbacks: Feedbacks,\n            ...createForms({\n                feedback: InitialFeedback\n            })\n        }),\n        // enhancers\n        applyMiddleware(thunk, logger)\n    );\n\n    return store;\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport 'bootstrap-social/bootstrap-social.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}